|UART_Echoback
uart_tx <= UART_TX:inst.tx
nRst => UART_TX:inst.nRst
nRst => UART_RX:inst4.nRst
50Mhz_clk => inst1.DATAIN
uart_rx => UART_RX:inst4.serialin
busy <= UART_TX:inst.busy


|UART_Echoback|UART_TX:inst
nRst => busy~reg0.PRESET
nRst => tx_data[0].ACLR
nRst => tx_data[1].ACLR
nRst => tx_data[2].ACLR
nRst => tx_data[3].ACLR
nRst => tx_data[4].ACLR
nRst => tx_data[5].ACLR
nRst => tx_data[6].ACLR
nRst => tx_data[7].ACLR
nRst => bit_cnt[0].ACLR
nRst => bit_cnt[1].ACLR
nRst => bit_cnt[2].ACLR
nRst => bit_cnt[3].ACLR
nRst => temp_data[0].ACLR
nRst => temp_data[1].ACLR
nRst => temp_data[2].ACLR
nRst => temp_data[3].ACLR
nRst => temp_data[4].ACLR
nRst => temp_data[5].ACLR
nRst => temp_data[6].ACLR
nRst => temp_data[7].ACLR
nRst => flag.ACLR
nRst => start_d.ACLR
nRst => pclk.ACLR
nRst => cnt[0].ACLR
nRst => cnt[1].ACLR
nRst => cnt[2].ACLR
nRst => cnt[3].ACLR
nRst => cnt[4].ACLR
nRst => cnt[5].ACLR
nRst => cnt[6].ACLR
nRst => cnt[7].ACLR
nRst => cnt[8].ACLR
nRst => state~7.DATAIN
clk => pclk.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => cnt[6].CLK
clk => cnt[7].CLK
clk => cnt[8].CLK
clk => temp_data[0].CLK
clk => temp_data[1].CLK
clk => temp_data[2].CLK
clk => temp_data[3].CLK
clk => temp_data[4].CLK
clk => temp_data[5].CLK
clk => temp_data[6].CLK
clk => temp_data[7].CLK
clk => flag.CLK
clk => start_d.CLK
start_sig => process_0.IN1
start_sig => start_d.DATAIN
data[0] => temp_data[0].DATAIN
data[1] => temp_data[1].DATAIN
data[2] => temp_data[2].DATAIN
data[3] => temp_data[3].DATAIN
data[4] => temp_data[4].DATAIN
data[5] => temp_data[5].DATAIN
data[6] => temp_data[6].DATAIN
data[7] => temp_data[7].DATAIN
tx <= tx.DB_MAX_OUTPUT_PORT_TYPE
busy <= busy~reg0.DB_MAX_OUTPUT_PORT_TYPE


|UART_Echoback|altpll0:inst40
inclk0 => altpll:altpll_component.inclk[0]
c0 <= altpll:altpll_component.clk[0]
locked <= altpll:altpll_component.locked


|UART_Echoback|altpll0:inst40|altpll:altpll_component
inclk[0] => pll.CLK
inclk[1] => ~NO_FANOUT~
fbin => ~NO_FANOUT~
pllena => ~NO_FANOUT~
clkswitch => ~NO_FANOUT~
areset => ~NO_FANOUT~
pfdena => ~NO_FANOUT~
clkena[0] => ~NO_FANOUT~
clkena[1] => ~NO_FANOUT~
clkena[2] => ~NO_FANOUT~
clkena[3] => ~NO_FANOUT~
clkena[4] => ~NO_FANOUT~
clkena[5] => ~NO_FANOUT~
extclkena[0] => ~NO_FANOUT~
extclkena[1] => ~NO_FANOUT~
extclkena[2] => ~NO_FANOUT~
extclkena[3] => ~NO_FANOUT~
scanclk => ~NO_FANOUT~
scanclkena => ~NO_FANOUT~
scanaclr => ~NO_FANOUT~
scanread => ~NO_FANOUT~
scanwrite => ~NO_FANOUT~
scandata => ~NO_FANOUT~
phasecounterselect[0] => ~NO_FANOUT~
phasecounterselect[1] => ~NO_FANOUT~
phasecounterselect[2] => ~NO_FANOUT~
phasecounterselect[3] => ~NO_FANOUT~
phaseupdown => ~NO_FANOUT~
phasestep => ~NO_FANOUT~
configupdate => ~NO_FANOUT~
fbmimicbidir <> <GND>
clk[0] <= clk[0].DB_MAX_OUTPUT_PORT_TYPE
clk[1] <= <GND>
clk[2] <= <GND>
clk[3] <= <GND>
clk[4] <= <GND>
clk[5] <= <GND>
extclk[0] <= <GND>
extclk[1] <= <GND>
extclk[2] <= <GND>
extclk[3] <= <GND>
clkbad[0] <= <GND>
clkbad[1] <= <GND>
enable1 <= <GND>
enable0 <= <GND>
activeclock <= <GND>
clkloss <= <GND>
locked <= pll.LOCKED
scandataout <= <GND>
scandone <= <GND>
sclkout0 <= <GND>
sclkout1 <= sclkout1.DB_MAX_OUTPUT_PORT_TYPE
phasedone <= <GND>
vcooverrange <= <GND>
vcounderrange <= <GND>
fbout <= <GND>
fref <= <GND>
icdrclk <= <GND>


|UART_Echoback|UART_RX:inst4
nRst => rx_data[0]~reg0.ACLR
nRst => rx_data[1]~reg0.ACLR
nRst => rx_data[2]~reg0.ACLR
nRst => rx_data[3]~reg0.ACLR
nRst => rx_data[4]~reg0.ACLR
nRst => rx_data[5]~reg0.ACLR
nRst => rx_data[6]~reg0.ACLR
nRst => rx_data[7]~reg0.ACLR
nRst => xmtdata[0].ACLR
nRst => xmtdata[1].ACLR
nRst => xmtdata[2].ACLR
nRst => xmtdata[3].ACLR
nRst => xmtdata[4].ACLR
nRst => xmtdata[5].ACLR
nRst => xmtdata[6].ACLR
nRst => xmtdata[7].ACLR
nRst => bit_cnt[0].ACLR
nRst => bit_cnt[1].ACLR
nRst => bit_cnt[2].ACLR
nRst => pcnt[0].ACLR
nRst => pcnt[1].ACLR
nRst => pcnt[2].ACLR
nRst => cnt[0].ACLR
nRst => cnt[1].ACLR
nRst => cnt[2].ACLR
nRst => cnt[3].ACLR
nRst => cnt[4].ACLR
nRst => cnt[5].ACLR
nRst => pclk.ACLR
nRst => flag.ACLR
nRst => serialin_d.ACLR
nRst => state~6.DATAIN
clk => flag.CLK
clk => serialin_d.CLK
clk => cnt[0].CLK
clk => cnt[1].CLK
clk => cnt[2].CLK
clk => cnt[3].CLK
clk => cnt[4].CLK
clk => cnt[5].CLK
clk => pclk.CLK
serialin => xmtdata.DATAB
serialin => serialin_d.DATAIN
serialin => process_1.IN1
rx_data[0] <= rx_data[0]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[1] <= rx_data[1]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[2] <= rx_data[2]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[3] <= rx_data[3]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[4] <= rx_data[4]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[5] <= rx_data[5]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[6] <= rx_data[6]~reg0.DB_MAX_OUTPUT_PORT_TYPE
rx_data[7] <= rx_data[7]~reg0.DB_MAX_OUTPUT_PORT_TYPE
valid <= valid.DB_MAX_OUTPUT_PORT_TYPE


